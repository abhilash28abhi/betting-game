buildscript {
	ext {
		springBootPlugin = 'org.springframework.boot:spring-boot-gradle-plugin'
		springBootVersion = '2.4.5'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.betting.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.9'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'junit:junit:4.12'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'com.google.code.gson', name: 'gson', version: '2.10'
	testImplementation 'org.mockito:mockito-core:3.12.4'
	testImplementation 'org.mockito:mockito-inline:3.12.4'
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
			runtimeClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
			srcDir file('src/integrationTest/java')
		}
		resources.srcDir file('src/integrationTest/resources')
	}
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

tasks.named('test') {
	useJUnitPlatform()
}


task integrationTest(type: Test) {
	description = 'Runs the integration tests.'
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	shouldRunAfter test
	useJUnitPlatform()
}

check.dependsOn integrationTest